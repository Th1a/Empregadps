public class Principal {
    static Scanner ler = new Scanner(System.in);
    static ArrayList<Empregado> funcionarios = new ArrayList<>();

    public static void main(String[] args) {
        while (true) {
            System.out.println("Bem-vindo");
            System.out.println("1- Criar novo empregado");
            System.out.println("2- Promover empregado");
            System.out.println("3- Aumentar Salario ");
            System.out.println("4- Demitir empregado");
            System.out.println("5- Fazer aniversario do empregado");
            System.out.println("6- Mostrar detalhes dos empregados");
            System.out.println("7- Sair");

            int escolha = ler.nextInt();
            ler.nextLine(); // Consumir nova linha

            switch (escolha) {
                case 1:
                    Empregado func = new Empregado();
                    System.out.println("Digite o nome do empregado");
                    func.setNome(ler.nextLine());
                    System.out.println("Digite o salario do empregado");
                    func.setSalario(ler.nextDouble());
                    System.out.println("Digite a idade do empregado");
                    func.setIdade(ler.nextInt());
                    System.out.println("Digite o id do empregado");
                    func.setId(ler.nextInt());
                    ler.nextLine(); // Consumir nova linha
                    System.out.println("O empregado " + func.getNome() + " foi contratado");
                    funcionarios.add(func);
                    break;

                case 2:
                    listarEmpregados();
                    System.out.println("Qual o id do empregado que você quer promover?");
                    int idPromover = ler.nextInt();
                    Empregado empregadoPromover = buscarEmpregadoPorId(idPromover);
                    if (empregadoPromover != null) {
                        empregadoPromover.promover();
                    } else {
                        System.out.println("Empregado não encontrado.");
                    }
                    break;

                case 3:
                    listarEmpregados();
                    System.out.println("Qual o id do empregado que você quer aumentar o salário?");
                    int idAumentarSalario = ler.nextInt();
                    Empregado empregadoAumentarSalario = buscarEmpregadoPorId(idAumentarSalario);
                    if (empregadoAumentarSalario != null) {
                        System.out.println("Digite o valor do aumento:");
                        double aumento = ler.nextDouble();
                        empregadoAumentarSalario.aumentarSalario(aumento);
                    } else {
                        System.out.println("Empregado não encontrado.");
                    }
                    break;

                case 4:
                    listarEmpregados();
                    System.out.println("Qual o id do empregado que você quer demitir?");
                    int idDemitir = ler.nextInt();
                    Empregado empregadoDemitir = buscarEmpregadoPorId(idDemitir);
                    if (empregadoDemitir != null) {
                        empregadoDemitir.demitir();
                        funcionarios.remove(empregadoDemitir);
                    } else {
                        System.out.println("Empregado não encontrado.");
                    }
                    break;

                case 5:
                    listarEmpregados();
                    System.out.println("Qual o id do empregado que você quer fazer aniversário?");
                    int idAniversario = ler.nextInt();
                    Empregado empregadoAniversario = buscarEmpregadoPorId(idAniversario);
                    if (empregadoAniversario != null) {
                        empregadoAniversario.aniversario();
                    } else {
                        System.out.println("Empregado não encontrado.");
                    }
                    break;

                case 6:
                    listarEmpregados();
                    break;

                case 7:
                    ler.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("Opção inválida.");
                    break;
            }
        }
    }

    public static void listarEmpregados() {
        if (funcionarios.isEmpty()) {
            System.out.println("Nenhum empregado cadastrado.");
        } else {
            for (Empregado emp : funcionarios) {
                System.out.println(emp);
            }
        }
    }

    public static Empregado buscarEmpregadoPorId(int id) {
        for (Empregado emp : funcionarios) {
            if (emp.getId() == id) {
                return emp;
            }
        }
        return null;
    }
}
